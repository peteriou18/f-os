.( Block 3 )                                                                   

0x 40 0x 04 0x 8d 0x 66 0x 67 0x 5 opcode  lea_eax,[eax*2+eax] 
0x 00 0x 04 0x 8d 0x 66 0x 67 0x 5 opcode  lea_eax,[eax*2]    
0 0 0 0 0x b5 0x 4 0x 8d 0x 66 0x 67 0x 9 opcode lea_eax,[esi*4] 
0 0x 20 0x 2e 0x 8b 0x 66 0x 36 0x 6 opcode mov_ebp,[ss:20]   
0 0x 20 0x 2e 0x 89 0x 66 0x 36 0x 6 opcode mov_[ss:20],ebp  

0 0 0x 30 0 0x 9d 0x 4 1 0x 66 0x 67 0x 9 opcode add_[ebx*4+st_b],eax   

0x 4 0x 45 0x 8b 0x 66 0x 67 0x 5 opcode mov_eax,[ebp+4]       
0x 4 0x 45 0x 89 0x 66 0x 67 0x 5 opcode mov_[ebp+4],eax       
0x 2 0x 24 0x 44 0x 8b 0x 67 0x 5 opcode mov_ax,[esp+2]   
 0 0 0 0 0x ad 0x 4 0x 8b 0x 66 0x 67 0x 36 0x a    opcode             mov_eax,[ss:ebp*4]                                                
 0 0 0 0 0x ad 0x 4 0x 89 0x 66 0x 67 0x 36 0x a    opcode             mov_[ss:ebp*4],eax  

.( BINs . ) 
BIN:  +    call pop_ab  add_eax,ebx  call push_code  ret      
BIN:  -    call pop_ab  sub_eax,ebx  call push_code  ret      
BIN:  *    call pop_ab  imul_ebx     call push_code  ret      
BIN: AND   call pop_ab  and_eax,ebx  call push_code  ret      
BIN: XOR   call pop_ab  xor_eax,ebx  call push_code  ret       
BIN: OR    call pop_ab  or_eax,ebx   call push_code  ret     
BIN: left_shift_one   call pop_ab    code_top @ label lso1   mov_cl,[eax+1]  mov_[eax],cl    inc_eax   cmp_eax,ebx 
                      jne lso1  ret                                    
                      
code_top  @ label hc1    rol_ebx,4 mov_al,bl and_al,0fh         mov_ah,30h   aaa_17  mov_[edx],al    inc_edx    ret    

BIN: HEXa    call pop_code   mov_edx,eax  call pop_code              mov_ebx,eax     
            call hc1 call hc1 call hc1 call hc1 call hc1 call hc1 call hc1 call hc1 ret     
            
BIN: R> mov_ebp,[ss:20] mov_eax,[ss:ebp*4] dec_ebp and_ebp, b# 0f call push_code mov_[ss:20],ebp ret 
BIN: R@ mov_ebp,[ss:20] mov_eax,[ss:ebp*4] call push_code ret
BIN: >R call pop_code mov_ebp,[ss:20] inc_ebp and_ebp, b# 0f mov_[ss:ebp*4],eax mov_[ss:20],ebp ret 

..                       
